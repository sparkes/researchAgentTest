name: Docker Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME_API: ${{ github.repository }}-api
  IMAGE_NAME_WEB: ${{ github.repository }}-web

jobs:
  build:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job
    permissions:
      contents: read
      packages: write
      security-events: write    # for vulnerability scanning

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: List directory contents
        run: ls -la

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'arm64,amd64'

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata (tags, labels) for API
        id: meta-api
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_API }}
          tags: |
            type=sha,format=long
            type=ref,event=branch
            latest

      - name: Extract metadata (tags, labels) for Web
        id: meta-web
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_WEB }}
          tags: |
            type=sha,format=long
            type=ref,event=branch
            latest

      - name: Build and push API Docker image
        id: build-api
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.api
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-api.outputs.tags }}
          labels: ${{ steps.meta-api.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Web Docker image
        id: build-web
        uses: docker/build-push-action@v4
        with:
          context: ./web
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-web.outputs.tags }}
          labels: ${{ steps.meta-web.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner on API image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.meta-api.outputs.tags }}
          format: 'sarif'
          output: 'trivy-results-api.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Run Trivy vulnerability scanner on Web image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.meta-web.outputs.tags }}
          format: 'sarif'
          output: 'trivy-results-web.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results for API
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results-api.sarif'
          category: 'api-container'

      - name: Upload Trivy scan results for Web
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results-web.sarif'
          category: 'web-container'
